name: Release on plugin version bump

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure jq (for parsing .uplugin JSON)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Find and read plugin version from .uplugin
        id: get_version
        run: |
          set -euo pipefail
          PLUGIN_FILE="$(git ls-files '*.uplugin' | head -n 1 || true)"
          if [ -z "$PLUGIN_FILE" ]; then
            echo "No .uplugin found"; exit 1
          fi
          echo "plugin_file=$PLUGIN_FILE" >> "$GITHUB_OUTPUT"
          VER="$(jq -r '(.VersionName // .Version // null)' "$PLUGIN_FILE")"
          if [ "$VER" = "null" ] || [ -z "$VER" ]; then
            echo "No VersionName/Version in $PLUGIN_FILE"; exit 1
          fi
          echo "version=$VER" >> "$GITHUB_OUTPUT"
          echo "Detected version: $VER"

      - name: Get latest release tag (if any)
        id: latest
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const { data } = await github.rest.repos.getLatestRelease({
                owner: context.repo.owner,
                repo: context.repo.repo
              });
              core.setOutput('tag', data.tag_name || '');
            } catch (e) {
              // No releases yet
              core.setOutput('tag', '');
            }

      - name: Decide if version bumped
        id: decide
        run: |
          set -euo pipefail
          WANT="v${{ steps.get_version.outputs.version }}"
          LATEST="${{ steps.latest.outputs.tag }}"
          echo "Latest release tag: '${LATEST}'"
          echo "Desired tag: '${WANT}'"

          if [ "$LATEST" = "$WANT" ]; then
            echo "changed=no" >> "$GITHUB_OUTPUT"
            echo "No version bump; skipping."
          else
            echo "changed=yes" >> "$GITHUB_OUTPUT"
            echo "tag=$WANT" >> "$GITHUB_OUTPUT"
            echo "Version bump detected."
          fi

      - name: Zip repository
        if: steps.decide.outputs.changed == 'yes'
        id: zip
        run: |
          set -euo pipefail
          ZIP_NAME="${{ github.event.repository.name }}.zip"
          zip -r "$ZIP_NAME" . -x ".git/*" ".github/workflows/*.yml~" "./$ZIP_NAME"
          echo "zip_path=$ZIP_NAME" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        if: steps.decide.outputs.changed == 'yes'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.decide.outputs.tag }}
          name: "Convai Pak Manager Release ${{ steps.get_version.outputs.version }}"
          body: |
            Automated release created from push.
            - Plugin file: `${{ steps.get_version.outputs.plugin_file }}`
            - Version: `${{ steps.get_version.outputs.version }}`
          draft: false
          prerelease: ${{ contains(steps.get_version.outputs.version, '-') }}
          files: ${{ steps.zip.outputs.zip_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
